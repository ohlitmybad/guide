name: Update Guide and ProGuide

on:
  push:
    branches: [ main, master ]
    paths:
      - 'index.html'

jobs:
  update-repos:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout guide repo
      uses: actions/checkout@v3
      with:
        path: guide
        token: ${{ secrets.PAT }}
        
    - name: Checkout proguide repo
      uses: actions/checkout@v3
      with:
        repository: ohlitmybad/proguide
        path: proguide
        token: ${{ secrets.PAT }}
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install beautifulsoup4
        
    - name: Sync content and update files
      run: |
        cat > sync_repos.py << 'EOL'
        import json
        from bs4 import BeautifulSoup
        import os
        import re

        # Process guide repo first
        print("Processing guide repo...")
        
        # Load the HTML file from guide
        with open('guide/index.html', 'r', encoding='utf-8') as file:
            guide_html_content = file.read()
        
        # Extract the content of the div with data-i18n="page-content" using regex
        # This preserves the exact whitespace and formatting
        page_content_pattern = r'<div[^>]*data-i18n="page-content"[^>]*>(.*?)</div>'
        match = re.search(page_content_pattern, guide_html_content, re.DOTALL)
        
        if not match:
            raise Exception("Could not find div with data-i18n='page-content' in guide repo")
        
        # Extract the inner content directly from the regex match
        guide_inner_content = match.group(1)
        
        # Create JSON object for guide
        guide_json_obj = {"page-content": guide_inner_content}
        
        # Write to guide en.json
        os.makedirs('guide/locales', exist_ok=True)
        with open('guide/locales/en.json', 'w', encoding='utf-8') as json_file:
            json.dump(guide_json_obj, json_file, ensure_ascii=False, indent=2)
        
        print("Updated guide/locales/en.json successfully!")
        
        # Now process proguide repo
        print("Processing proguide repo...")
        
        # Load the HTML file from proguide
        with open('proguide/index.html', 'r', encoding='utf-8') as file:
            proguide_html_content = file.read()
        
        # Replace the content of the div with data-i18n="page-content" using regex
        updated_proguide_html = re.sub(
            r'(<div[^>]*data-i18n="page-content"[^>]*>).*?(</div>)',
            r'\1' + guide_inner_content + r'\2',
            proguide_html_content,
            flags=re.DOTALL
        )
        
        # Write updated HTML back to proguide index.html
        with open('proguide/index.html', 'w', encoding='utf-8') as file:
            file.write(updated_proguide_html)
        
        print("Updated proguide/index.html successfully!")
        
        # Create JSON object for proguide (same as guide)
        proguide_json_obj = {"page-content": guide_inner_content}
        
        # Write to proguide en.json
        os.makedirs('proguide/locales', exist_ok=True)
        with open('proguide/locales/en.json', 'w', encoding='utf-8') as json_file:
            json.dump(proguide_json_obj, json_file, ensure_ascii=False, indent=2)
        
        print("Updated proguide/locales/en.json successfully!")
        EOL
        
        python sync_repos.py
        
    - name: Commit and push guide changes
      run: |
        cd guide
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add locales/en.json
        git diff --quiet && git diff --staged --quiet || git commit -m "Update en.json automatically"
        git push
        
    - name: Commit and push proguide changes
      run: |
        cd proguide
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add index.html locales/en.json
        git diff --quiet && git diff --staged --quiet || git commit -m "Sync content from guide repo"
        git push
