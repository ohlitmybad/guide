name: Update Guide and ProGuide

on:
  push:
    branches: [ main, master ]
    paths:
      - 'index.html'

jobs:
  update-repos:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout guide repo
      uses: actions/checkout@v3
      with:
        path: guide
        token: ${{ secrets.PAT }}
        
    - name: Checkout proguide repo
      uses: actions/checkout@v3
      with:
        repository: ohlitmybad/proguide
        path: proguide
        token: ${{ secrets.PAT }}
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install beautifulsoup4
        
    - name: Sync content and update files
      run: |
        cat > sync_repos.py << 'EOL'
        import json
        from bs4 import BeautifulSoup
        import os
        import re

        # Process guide repo first
        print("Processing guide repo...")
        
        # Load the HTML file from guide
        with open('guide/index.html', 'r', encoding='utf-8') as file:
            guide_html_content = file.read()
        
        # Print first 2000 characters to debug
        print("First 2000 chars of guide HTML:", guide_html_content[:2000])
        
        # Find the div location
        div_start = guide_html_content.find('<div data-i18n=page-content')
        if div_start == -1:
            div_start = guide_html_content.find('<div data-i18n="page-content"')
            if div_start == -1:
                div_start = guide_html_content.find("<div data-i18n='page-content'")
        
        if div_start == -1:
            raise Exception("Could not find div with data-i18n='page-content' in guide repo")
        
        # Find the matching closing div tag (need to count opening/closing divs)
        div_level = 0
        pos = div_start
        div_end = -1
        
        while pos < len(guide_html_content):
            open_tag = guide_html_content.find('<div', pos)
            close_tag = guide_html_content.find('</div>', pos)
            
            # If no more tags, break
            if open_tag == -1 and close_tag == -1:
                break
                
            # If we find an opening tag first
            if open_tag != -1 and (close_tag == -1 or open_tag < close_tag):
                div_level += 1
                pos = open_tag + 1
                continue
                
            # If we find a closing tag first
            if close_tag != -1 and (open_tag == -1 or close_tag < open_tag):
                div_level -= 1
                if div_level == 0:
                    div_end = close_tag + 6  # length of '</div>'
                    break
                pos = close_tag + 1
                continue
        
        if div_end == -1:
            raise Exception("Could not find matching closing div for page-content")
        
        # Extract the div content (including the div tags)
        div_content = guide_html_content[div_start:div_end]
        
        # Extract just the inner content (without the opening and closing div tags)
        # Find the first > after the div_start
        first_gt = div_content.find('>')
        inner_content = div_content[first_gt+1:-6]  # -6 for '</div>'
        
        print("Extracted inner content (last 100 chars):", inner_content[-100:])
        
        # Create JSON object for guide - using only the inner content
        guide_json_obj = {"page-content": inner_content}
        
        # Write to guide xx.json
        os.makedirs('guide/locales', exist_ok=True)
        with open('guide/locales/xx.json', 'w', encoding='utf-8') as json_file:
            json.dump(guide_json_obj, json_file, ensure_ascii=False, indent=2)
        
        print("Updated guide/locales/xx.json successfully!")
        
        # Now process proguide repo
        print("Processing proguide repo...")
        
        # Load the HTML file from proguide
        with open('proguide/index.html', 'r', encoding='utf-8') as file:
            proguide_html_content = file.read()
        
        # Find the div in proguide
        proguide_div_start = proguide_html_content.find('<div data-i18n=page-content')
        if proguide_div_start == -1:
            proguide_div_start = proguide_html_content.find('<div data-i18n="page-content"')
            if proguide_div_start == -1:
                proguide_div_start = proguide_html_content.find("<div data-i18n='page-content'")
        
        if proguide_div_start == -1:
            raise Exception("Could not find div with data-i18n='page-content' in proguide repo")
        
        # Find the closing div tag
        div_level = 0
        pos = proguide_div_start
        proguide_div_end = -1
        
        while pos < len(proguide_html_content):
            open_tag = proguide_html_content.find('<div', pos)
            close_tag = proguide_html_content.find('</div>', pos)
            
            # If no more tags, break
            if open_tag == -1 and close_tag == -1:
                break
                
            # If we find an opening tag first
            if open_tag != -1 and (close_tag == -1 or open_tag < close_tag):
                div_level += 1
                pos = open_tag + 1
                continue
                
            # If we find a closing tag first
            if close_tag != -1 and (open_tag == -1 or close_tag < open_tag):
                div_level -= 1
                if div_level == 0:
                    proguide_div_end = close_tag + 6  # length of '</div>'
                    break
                pos = close_tag + 1
                continue
        
        if proguide_div_end == -1:
            raise Exception("Could not find matching closing div for page-content in proguide")
        
        # Extract the opening div tag from proguide
        first_gt_proguide = proguide_html_content.find('>', proguide_div_start)
        opening_div_tag = proguide_html_content[proguide_div_start:first_gt_proguide+1]
        
        # Create the new content - preserving the exact opening tag
        new_content = opening_div_tag + inner_content + '</div>'
        
        # Replace the existing div content with the new content
        updated_proguide_html = (
            proguide_html_content[:proguide_div_start] + 
            new_content + 
            proguide_html_content[proguide_div_end:]
        )
        
        # Write updated HTML back to proguide index.html
        with open('proguide/index.html', 'w', encoding='utf-8') as file:
            file.write(updated_proguide_html)
        
        print("Updated proguide/index.html successfully!")
        
        # Create JSON object for proguide (same content as guide)
        proguide_json_obj = {"page-content": inner_content}
        
        # Write to proguide xx.json
        os.makedirs('proguide/locales', exist_ok=True)
        with open('proguide/locales/xx.json', 'w', encoding='utf-8') as json_file:
            json.dump(proguide_json_obj, json_file, ensure_ascii=False, indent=2)
        
        print("Updated proguide/locales/xx.json successfully!")
        EOL
        
        python sync_repos.py
        
    - name: Commit and push guide changes
      run: |
        cd guide
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add locales/xx.json
        git diff --quiet && git diff --staged --quiet || git commit -m "Update xx.json automatically"
        git push
        
    - name: Commit and push proguide changes
      run: |
        cd proguide
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add index.html locales/xx.json
        git diff --quiet && git diff --staged --quiet || git commit -m "Sync content from guide repo"
        git push
